@page "/fetchproducts"
@using InventoryHub.shared.Models
@using InventoryHub.shared.Services
@inject ProductService ProductService

<h3>Product List</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p style="color: red;">@errorMessage</p>
}
else if (products != null)
{
    <ul>
        @foreach (var product in products)
        {
                        <li>
                <strong>@product.Name</strong> - $@product.Price<br />
                Stock: @product.Stock<br />
                Category: @product.Category.Name
            </li>
        }
    </ul>
}
else
{
    <p>Loading...</p>
}

@code {
    private Product[]? products;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            using var httpClient = new HttpClient { BaseAddress = new Uri("http://localhost:5277") };
            products = await ProductService.GetProductsAsync(httpClient);
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred while fetching products: {ex.Message}";
        }
    }
}